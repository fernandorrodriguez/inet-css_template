/* https://flexbox.help/ */

body {
    margin: 0;
}

* {
    font-family: 'Roboto', sans-serif;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 50px;
    height: 80px;
    background-color:rgba(0, 0, 0, 0.9);
    color: white;
    box-shadow: 0 4px 10px rgba(0,0,0,0.5);
    position: fixed;
    z-index: 1; 
    width: 100%;
    top: 0;
    box-sizing: border-box;
}

.link {
    text-decoration: none;
    margin-left: 10px;
    color:white;
}

.link:before {
    content: "[";
    position: relative;
    left: 10px;
    /* opacity: Cuan transparente se ve un elemento. 0-1 */
    opacity: 0;
    transition-property: all;
    transition-duration: 0.3s;
}

.link:hover:before {
    left: -5px;
    opacity: 1;
}

.link:after {
    content: "]";
    position: relative;
    right: 10px;
    opacity: 0;
    transition-property: all;
    transition-duration: 0.3s;
}

.link:hover:after {
    right: -5px;
    opacity: 1;
}


section {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 400px;
}

#central {
    display: flex;
}

/*
Selector Múltiple : 

selector  , selector [,selectores] {}
*/

#central #izq .arriba {
    background-image: url(evening-exhibition-france-2363.jpg);
    background-position: center center;
    background-size: cover;
    
}

section:nth-child(2) {
    flex-direction: column;
    color: white;
}

#central #der .arriba {
    background-image: url(arches-architectural-design-architecture-135018.jpg);
    background-position: center center;
    background-size: cover;
}

#central #izq .abajo > div {
    background-image: url(art-design-indoors-460736.jpg);
    background-position: center center;
    background-size: cover;
}

#central #der .abajo > div {
    background-image: url(evening-exhibition-france-2363.jpg);
    background-position: center center;
    background-size: cover;
}

.izq , .der {
    height: 100px;
    width: 100px;
    background-color: antiquewhite;
}

.arriba {
    width: 230px;
    height: 120px;
    background-color: rgba(255,0,0,0.5);
    margin-bottom: 15px;
    box-shadow: 2px 2px 3px rgba(0,0,0,0.5);
    transition: box-shadow 0.3s;
}

.arriba:hover {
    box-shadow: 2px 2px 16px 6px rgba(0, 0, 0, 0.35);
}

.izq {
    margin-right: 15px;
}

.der {
    margin-left: 15px;
}

.abajo {
    display: flex;
    margin-top: 15px;
}

/* 
.der {
    height: 100px;
    width: 100px;
    background-color: antiquewhite;
} 
*/

#izq {
    margin-right: 30px;
}

#der {
    margin-left: 30px;
}

#nosotros_central {
    display: flex;
    width: 700px;
    justify-content: space-between;
}

.iconos_red {
    width: 50px;
    height: 50px;
    background-color: rgb(6, 13, 15);
    /* 
    border : 2px solid black;
    border-width: 2px;
    border-style: solid;
    border-color: green; 
    */
    border-radius: 3px;
    margin: 0 5px;
}

.iconos {
    display: flex;
    justify-content: space-around;
    margin: 10px 0;
}

.overlay {
    background-color: rgba(0,0,0,0.5);
    position: absolute;
    transition: background-color 0.3s;
}

.overlay , .imagen {
    width: 200px;
    height: 200px;
}

.imagen {
    overflow: hidden;
    position: relative;
    /* width: 200px;
    height: 200px; */
    background-color: crimson;
    border-radius: 50%;
}

.imagen:hover .overlay {
    background-color: transparent;
}


/* h2:before {
    content: "";
    width: 50px;
    height: 50px;
    background-color: red;
    display: block;
}

h2:after {
    content: "";
    width: 50px;
    height: 50px;
    background-color: red;
    display: block;
} */

/*
PSEUDO-SELECTORES : Es un selector adicion que se agrega a un selector normal con prefijo : (dos puntos) y nos permite ponerle reglas a elementos internos de una etiqueta(PSEUDO-ELEMENTOS) o estados(PSEUDO-CLASE)

SELECTOR DE CURSOR ENCIMA : 

selector:hover{}


SELECTOR DE ANTES Y DESPUES : 
selector:before {}
selector:after {}



SELECTOR DE POSICION :    

selector:nth-child(N) 

*/


/*
SELECTOR DE JERARQUIA 

padre hijo {} : Para todos los elementos hijos que esten en alguna posicion adentro de un elemento padre
    body div {}

padre > hijo {} : Para todos los elementos hijos directos de un elemento padre
    body > div {}

Para todos los elementos con clase .nosotros_columna , solo el primero de todos los hermanos cuyo elemento hijo tenga la clase .imagen
*/

.imagen {
    background-size: cover;
}

.nosotros_columna:nth-child(1) .imagen{
    background-image: url(imagen_1.jpg);
}

.nosotros_columna:nth-child(2) .imagen{
    background-image: url(imagen_2.jpg);
}

.nosotros_columna:nth-child(3) .imagen{
    background-image: url(imagen_3.jpg);
    background-position: center;
}



.nosotros_columna {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 210px;
}

.iconos_red:nth-child(1) {
    background-image: url(sprite.png);
    background-position: -16px 152px;
}

.iconos_red:nth-child(2) {
    background-image: url(sprite.png);
    background-position: -268px 152px;
}

.iconos_red:nth-child(3) {
    background-image: url(sprite.png);
    background-position: -687px 152px;
}

#banner{
    margin-top: 80px;
    justify-content: flex-start;
    padding: 0 50px;
    background-image: url(fondo.jpg);
    background-size: cover;
    background-position: center;
}

#banner_inner {
    width: 300px;
    background-color: rgba(0, 0, 0,0.5);
    color: white;
    padding: 10px;
}

#banner_inner h2 {
    color: #ffa726;
    font-size: 36px;
}

section:nth-child(2){
    background-color: rgb(89, 55, 40);
}

/*https://material.io/design/*/

/*
background-position : Nos sirve para determinar la posición de arranque de una imagen. Pueden ser coordenadas en X é Y o palabras reservadas como laterales : top - bottom - center - left - right 

background-repeat : Nos sirve para determinar como vamos a repetir la imagen en su elemento. 


COLORES : 

- predeterminados : blue - red 
- hexadecimales : #XYXYXY  #XXX
- rgb / rgba : 
    rgb(0-255,0-255,0-255) 
    rgba(0-255,0-255,0-255,0-1)
- hsl / hsla : hsl() - hsla()


POSICION Y MOVIMIENTO 

position : static(default) - relative - absolute - fixed 

left : coords desde la izquierda
right : coords desde la derecha
top : coords desde arriba
bottom : coords desde abajo
z-index : Indice de capa en el eje z



TRANSICIÓN : 

transition : <property> <duration> [delay] [timing-function]

transition-property : El nombre de la propiedad a la cual le queremos dar la transición ó la palabra "all". Si son muchas propiedades, cada una va separada con coma.

transition-duration : Describe en segundos(s) ó milisegundos(ms) cuanto va a durar la transición.

transition-delay : Describe en segundos(s) ó milisegundos(ms) cuanto va a tardar la transición en iniciar. 

transition-timing-function : Describe la curva de velocidad que hay entre un punto A y un punto B relativo a la duración. Puede ser ease-in, ease-out, ease ó cubic-bezier(x1,x2,y1,y2)


https://cubic-bezier.com/#.67,-0.89,.43,1.77



box-shadow : <dX> <dY> [blur] [spread] [color] [inset]


La geometria de una caja está determinada por todos sus espacios 

contenido : width - height +
padding +
border 

Si yo quiero darle un tamaño a una caja que se rija SOLO por su alto y ancho, uso 

box-sizing : content-box | border-box


contenido : width + height -
padding -
border 


https://drive.google.com/open?id=1mwEiJnFE0wBzEN8XxsMUslHoWzBaPmIj

RESPONSIVE DESIGN: es aplicar reglas de media para que el diseño se adapte dependiendo el dispositivo +
                   Mobile first (se aconseja empezar a maquetar para mobile)



*/

#drawer {
    width: 350px;
    position: fixed;
    z-index: 2;
    background-color: black;
    height: 100%;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    left: -400px;
    transition: left 0.3s;
    box-shadow: 16px 0px 20px rgba(0, 0, 0,0.7); 
}

#drawer nav {
    display: flex;
    flex-direction: column;
}

#drawer a {
    color: white;
}

label{
    position: fixed;
    z-index: 3;
    top:28px;
    left:12px;
    color: white;
}

input{
    display: none;
}

input:checked ~ #drawer{
    left:0;
}

footer{
    display:flex;
    background-color: rgb(89, 55, 40);
    height: 300px;
    justify-content: center;
    align-items: center;
}

/*lo absoluto se mueve adentro de lo relativo*/

.divtext_float{
    position: relative;
}

.label_textfloat{
    position: absolute;

}

/* @media <dispositivo> [and (condiciones)] {}

dispositivos: all - screen - print - speech

MEDIA QUERY: aplicale las reglas que estan adentro del query si y solo si que tenga pantalla
y como maximo su ancho es de 600px*/

@media screen and (max-width: 600px){
    nav{display: none;}
}

@media screen and (min-width: 600px) { /*minimo de 600*/

    /*

    header{
        background-color: blue;
    }

    */
       
    label.material-icons{
        display: none; /* none!important; esta deprecado, mala practica*/
    }
    

}
